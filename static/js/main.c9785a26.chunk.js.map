{"version":3,"sources":["components/Filter/Filter.module.css","components/FormContact/FormContact.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","FormContact","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetState","className","s","form","preventDefault","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","Filter","filterInput","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","map","id","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","contact","alert","newContact","shortid","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9785a26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2NRxR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__2EKv3\",\"label\":\"FormContact_label__2Anii\",\"input_name\":\"FormContact_input_name__3HsuJ\",\"input_number\":\"FormContact_input_number__1SQ65\",\"button\":\"FormContact_button__XXLl4\",\"btnText\":\"FormContact_btnText__2W1tf\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FormContact.module.css';\n\nfunction FormContact({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input_name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n      </button>\n    </form>\n  );\n}\n\nFormContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name{' '}\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        contactName={name}\n        contactNumber={number}\n        onClickDeleteContact={() => onDeleteContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport FormContact from './components/FormContact/FormContact';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n    if (contacts.find(contact => contact.number === number)) {\n      return alert(`${number} is already belongs to another contact!`);\n    }\n\n    const newContact = {\n      id: shortid(),\n      name,\n      number,\n    };\n\n    setContacts([newContact, ...contacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <FormContact onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__18VoN\",\"listItemText\":\"ContactListItem_listItemText__3sLiR\",\"button\":\"ContactListItem_button__2mntc\"};"],"sourceRoot":""}